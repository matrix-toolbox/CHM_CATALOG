function Y = Y_10_4_pattern
% -----------------------------------------------------------------------------
% 2022-08-23 Wojciech Bruzda; name[at]uj.edu.pl : name = w.bruzda
%            https://chaos.if.uj.edu.pl/~karol/hadamard/
%            https://github.com/matrix-toolbox/
% -----------------------------------------------------------------------------
% 2022-08-25
%
% Some experimental script...
% Probably an early attempt to "Y_10_4_...".
% Fix {e, f, g, h} (some "nice" values, eg. roots of unity) and variate {a,b,c,d} to find a CHM.
% Resulting matrix H has the following properties:
%   * defect = 4
%   * #Lambda = 12, 108, 294, 300, 330, 336, ...
%   * four free non-affine parameters
%
% Convergence to CHM is not so frequent.
%
% [1] https://arxiv.org/abs/2204.11727
% *****************************************************************************
% Original pattern:
%
%    H = [
%	1	1	1	1	1	1	1	1	1	1;
%	1	a	b	c	d	e	f	g	h	k;
%	1	-a*r/h	-b	a*r/d	-a*r/c	a*r/k	a*r/g	-a*r/f	r	-a*r/e;
%	1	-a*r/e	-b	a*r/g	-a*r/f	r	a*r/d	-a*r/c	a*r/k	-a*r/h;
%	1	-a*r/f	-b	a*r/k	-a*r/e	a*r/d	r	-a*r/h	a*r/g	-a*r/c;
%	1	d	b	h	a	f	e	k	c	g;
%	1	g	b	e	k	c	h	a	f	d;
%	1	-a*r/c	-b	r	-a*r/h	a*r/g	a*r/k	-a*r/e	a*r/d	-a*r/f;
%	1	-a*r/b	-1	a*r/b	-a*r/b	a*r/b	a*r/b	-a*r/b	a*r/b	-a*r/b;
%	1	k	b	f	g	h	c	d	e	a;
%    ];
% *****************************************************************************
% examples with different cardinalities of L:
%
% a = -1.0000e+00 + 1.4146e-15i
% b = -5.0646e-15 - 1.0000e+00i
% c =  0.5000 - 0.8660i
% d =  8.1612e-16 - 1.0000e+00i
%    e = exp(2j*pi/2);
%    f = exp(2j*pi/4);
%    g = exp(2j*pi/12);
%    h = exp(2j*pi/6);
% defect = 10
% #L = 12
% -----------------------------------------------------------------------------
% a = -0.3708 - 0.9287i    a = -0.2343 - 0.9722i
% b = -0.9921 + 0.1258i    b = -0.999580 - 0.028974i
% c =  0.3251 - 0.9457i    c =  0.5237 - 0.8519i
% d =  0.6630 - 0.7486i    d = -0.8881 + 0.4597i
% e = exp(2j*pi/2);
% f = exp(2j*pi/4);
% g = exp(2j*pi/12);
% h = exp(2j*pi/6);
% defect = 4
% #L = 294
% -----------------------------------------------------------------------------
% a = -0.4959 - 0.8684i       a = -0.4959 - 0.8684i
% b = -0.999637 - 0.026935i   b = -0.999637 - 0.026935i
% c =  0.5144 - 0.8575i       c =  0.5144 - 0.8575i
% d = -0.9113 + 0.4118i       d = -0.9113 + 0.4118i
%    e = exp(2j*pi/2);
%    f = exp(2j*pi/5);
%    g = exp(2j*pi/12);
%    h = exp(2j*pi/6);
% defect = 4
% #L = 330
% -----------------------------------------------------------------------------
% a = -0.9842 - 0.1772i
% b = -0.5000 - 0.8660i
% c =  0.5000 - 0.8660i
% d = -0.7444 + 0.6677i
%    e = exp(2j*pi/2);
%    f = exp(2j*pi/6);
%    g = exp(2j*pi/12);
%    h = exp(2j*pi/6);
% defect = 4
% #L = 108
% -----------------------------------------------------------------------------
% a = -0.7367 - 0.6762i
% b = -0.999404 + 0.034522i
% c =  0.4869 - 0.8734i
% d = -0.9376 + 0.3476i
% e = exp(2j*pi/2);
% f = exp(2j*pi/7);
% g = exp(2j*pi/12);
% h = exp(2j*pi/6);
% defect = 4
% #L = 330
% -----------------------------------------------------------------------------
%a =    -0.8650280621402493 -     0.5017234813220182i
%b =    -0.9910706836595742 +     0.1333375415647987i
%c =     0.4586945821364296 -     0.8885939907059274i
%d =     0.1803613164810568 -      0.983600424723995i
%    e = exp(2j*pi/2);
%    f = exp(2j*pi/6);
%    g = exp(2j*pi/12);
%    h = exp(2j*pi/10);
% defect = 4
% #L = 330     
% -----------------------------------------------------------------------------
% a = -0.5205 - 0.8539i             a = -0.998866 - 0.047607i
% b = -9.9997e-01 + 7.9643e-03i     b = -0.4537 - 0.8911i
% c =  0.5280 - 0.8492i             c =  0.5264 - 0.8503i
% d =  0.082435 - 0.996596i         d = -0.8317 + 0.5553i
%    e = exp(2j*pi/2);
%    f = exp(2j*pi/7);
%    g = exp(2j*pi/12);
%    h = exp(2j*pi/5);
% defect = 4
% #L = 336
% -----------------------------------------------------------------------------
% a = -0.997714 - 0.067574i
% b = -0.4575 - 0.8892i
% c =  0.5283 - 0.8491i
% d = -0.8465 + 0.5323i
%    e = exp(2j*pi/2);
%    f = exp(2j*pi/7);
%    g = exp(2j*pi/11);
%    h = exp(2j*pi/5);
% defect = 4
% #L = 336
% -----------------------------------------------------------------------------
% is it a real family, or just "single" points?
% a =    -0.9605317482581144 -       0.27817038050125i  a =    -0.9637539569124385 -     0.2667926358346824i   a =    -0.5548554832796707 -     0.8319467487011923i
% b =    -0.6615956118600533 -     0.7498608179972625i  b =    -0.9025086777172846 -     0.4306716691924367i   b =    -0.9724530263352107 +     0.2330989308673255i
% c =     0.3740265181291998 -     0.9274180091717795i  c =     0.5152884266392125 -     0.8570168244391039i   c =     0.4273907715369241 -      0.904066993316908i
% d =     -0.693407680492592 +     0.7205454799205131i  d =     0.4628982541543329 -     0.8864114204481295i   d =    -0.9681855266288206 +     0.2502334630429587i
%    e = exp(2j*pi/2);
%    f = exp(2j*pi/6);
%    g = exp(2j*pi/6);
%    h = exp(2j*pi/12);
% defect = 4
% #L = 288
% -----------------------------------------------------------------------------
%a =    -0.8660254037844343 -      0.500000000000008i
%b =                     -1 +  1.800389463100691e-14i
%c =     0.4999999999999964 -     0.8660254037844409i
%d =     0.4999999999999988 -     0.8660254037844387i
%    e = exp(2j*pi/2);
%    f = exp(2j*pi/6);
%    g = exp(2j*pi/6);
%    h = exp(2j*pi/12);
% defect = 10
% #L = 12
% -----------------------------------------------------------------------------
%a =    -0.5501562245381281 -     0.8350617513704925i  a =    -0.9326649248887385 -     0.3607438674215867i  a =    -0.9419795356032518 -     0.3356703062600014i
%b =     -0.998285921837901 +    0.05852536424706985i  b =    -0.6181315469943482 -     0.7860746724137433i  b =     -0.745944381093818 -     0.6660082434283831i
%c =     0.4800186575565487 -       0.87725827918442i  c =     0.4537583112815417 -     0.8911247920145206i  c =     0.5174505884004934 -     0.8557130877601348i
%d =     0.3497786467245793 -      0.936832374705061i  d =      0.206513320960678 -     0.9784437890169237i  d =    -0.9433545244840327 +     0.3317864390470236i
%    e = exp(2j*pi/2);
%    f = exp(2j*pi/8);
%    g = exp(2j*pi/6);
%    h = exp(2j*pi/6);
% defect = 4
% #L = 300
% -----------------------------------------------------------------------------
%a =    -0.8782435461507425 +     0.4782136276232313i or a <--> d
%b =     0.8711681577047198 +     0.4909847665675225i
%c =     0.1339745962155616 -      0.990984766567519i
%d =     0.4090744382935697 -     0.9125010158541207i
%    e = exp(2j*pi/2);
%    f = exp(2j*pi/2);
%    g = exp(2j*pi/6);
%    h = exp(2j*pi/12);
% defect = 4
% #L = 188     
% -----------------------------------------------------------------------------

    a = exp(2j*pi*rand);
    b = exp(2j*pi*rand);
    c = exp(2j*pi*rand);
    d = exp(2j*pi*rand);

    e = exp(2j*pi/2);
    f = exp(2j*pi/6);
    g = exp(2j*pi/12);
    h = exp(2j*pi/10);


    Z_OPTIMAL = +Inf;
    Z = +Inf;
    mu = 1;

    while Z>5e-14
        RESTORE_a = a;
        RESTORE_b = b;
        RESTORE_c = c;
        RESTORE_d = d;

        a += (randn + 1j*randn)*mu;
        b += (randn + 1j*randn)*mu;
        c += (randn + 1j*randn)*mu;
        d += (randn + 1j*randn)*mu;


        k = -1 - a - b - c - d - e - f - g - h;
        r = (-1 - h - c - f - e) / (1 + a * (1/k + 1/g + 1/d + 1/b));


        Y = [
            1     1      1        1        1         1         1          1         1        1     ;
            1    -1      a*r/b    a*r/b    a*r/b     a*r/b    -a*r/b     -a*r/b    -a*r/b   -a*r/b ;
            1    -b      r        a*r/k    a*r/g     a*r/d    -a*r/h     -a*r/c    -a*r/f   -a*r/e ;
            1    -b      a*r/k    r        a*r/d     a*r/g    -a*r/e     -a*r/f    -a*r/c   -a*r/h ;
            1    -b      a*r/g    a*r/d    r         a*r/k    -a*r/f     -a*r/e    -a*r/h   -a*r/c ;
            1    -b      a*r/d    a*r/g    a*r/k     r        -a*r/c     -a*r/h    -a*r/e   -a*r/f ;
            1     b      h        e        f         c         a          d         g        k     ;
            1     b      c        f        e         h         d          a         k        g     ;
            1     b      f        c        h         e         g          k         a        d     ;
            1     b      e        h        c         f         k          g         d        a     ;
        ];

        Z = nh(Y);
        if Z < Z_OPTIMAL
            Z_OPTIMAL = Z
            mu = Z_OPTIMAL * 0.01;
        else
            a = RESTORE_a;
            b = RESTORE_b;
            c = RESTORE_c;
            d = RESTORE_d;
        end


    end


    a
    b
    c
    d
   e,f,g,h


end

